{"version":3,"sources":["serviceWorker.js","lib/redux/constant.ts","lib/redux/reducers.ts","lib/redux/configureStore.ts","lib/redux/selectors.ts","components/navBar/index.tsx","config/token.ts","config/fee.ts","lib/utils.ts","components/accountCard/index.tsx","components/delegationList/index.tsx","pages/home/index.tsx","components/validatorCard/index.tsx","components/validatorList/index.tsx","pages/validators/index.tsx","pages/validatorDetail/index.tsx","lib/sdk.ts","lib/validator.ts","config/banner.ts","components/delegateForm/index.tsx","pages/delegate/index.tsx","components/undelegateForm/index.tsx","pages/undelegate/index.tsx","lib/api.ts","pages/app/index.tsx","lib/redux/actions.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","UPDATE_ACCOUNT","UPDATE_VALIDATORS","UPDATE_DELEGATIONS","initialState","account","validators","delegations","device","state","arguments","length","undefined","action","produce","draft","type","types","payload","Object","objectSpread","logger","store","next","console","group","info","result","log","getState","groupEnd","selectAccountInfo","selectValidators","selectDelegations","CMP","index","this","props","react_default","a","createElement","className","react_router_dom","to","Component","token","denom","fee","transfer","amount","tokenConfig","gas","retainFee","createTxPayload","from","msg","memo","chainType","feeConfig","createDelegateMsg","delegatorAddress","validatorAddress","value","delegator_address","validator_address","createUnDelegateMsg","BN","DP","RM","ellipsis","str","num","concat","substring","toBN","x","uatom","atom","times","toString","div","thousandCommas","numeral","format","isExist","o","getBalanceFromAccount","v","coins","Array","isArray","find","c","getDeletationBalance","balance","forEach","d","shares","toFixed","getRewardBalance","rewards","getUnbondingBalance","unbondingDelegations","entries","address","rewardBalance","refundingBalance","delegateBalance","connect","key","operator_address","description","moniker","_this","_this$props","map","el","renderItem","Page","onClick","src","alt","id","components_navBar","components_accountCard","components_delegationList","renderDelegateBanner","withRouter","_state","validator","tokens","percent","logo","components_validatorCard","components_validatorList","params","details","delegator_shares","commission","rate","annualized_returns","callPromisifyAPI","apiName","Promise","resolve","imToken","sendTransaction","validAmount","Number","isNaN","bnAmounnt","plus","gt","lt","banner","onSubmit","_validAmount","_validAmount2","slicedToArray","valid","alert","bannerConfig","then","txHash","catch","e","message","onChange","event","setState","target","atomBalance","disabled","placeholder","max","min","components_delegateForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectedDelegation","components_undelegateForm","_headers","_provider","initRequestDependency","_initRequestDependency","apply","_callee","regenerator_default","wrap","_context","prev","t0","headers","JSON","parse","sent","t1","t2","t3","abrupt","provider","stop","get","url","_ref","_url","Axios","method","res","data","Error","stringify","error","warn","getDelegations","getRewards","delegatorAddr","getUnbondingDelegations","App","updateAsyncData","updateAccount","updateDelegations","updateValidators","accounts","api","utils","b","emptyAccount","sequence","account_number","BaseVestingAccount","assign","BaseAccount","err","includes","accountInfo","basename","react_router","exact","path","component","Home","Validators","ValidatorDetail","Delegate","UnDelegate","mapDispatchToProps","preloadedState","middlewares","thunkMiddleware","middlewareEnhancer","applyMiddleware","createStore","rootReducer","configureStore","ReactDOM","render","es","pages_app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e5ddef1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const UPDATE_ACCOUNT = 'UPDATE_ACCOUNT'\nexport const UPDATE_VALIDATORS = 'UPDATE_VALIDATORS'\nexport const UPDATE_DELEGATIONS = 'UPDATE_DELEGATIONS'","import produce from 'immer'\nimport * as types from './constant'\n\nconst initialState = {\n  account: {\n  },\n  validators: [],\n  delegations: [],\n}\n\nexport default function device(state = initialState, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case types.UPDATE_ACCOUNT:\n        const account = action.payload.account\n        if (account && typeof account === 'object') {\n          draft.account = { ...draft.account, ...action.payload.account }\n        }\n        return\n      case types.UPDATE_VALIDATORS:\n        draft.validators = action.payload.validators\n        return\n      case types.UPDATE_DELEGATIONS:\n        draft.delegations = action.payload.delegations\n        return\n      default:\n        return draft\n    }\n  })\n}\n","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n\nimport rootReducer from './reducers'\n\nconst logger = store => next => action => {\n  console.group(action.type)\n  console.info('dispatching', action)\n  let result = next(action)\n  console.log('next state', store.getState())\n  console.groupEnd()\n  return result\n}\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [logger, thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n\n  const store = createStore(rootReducer, preloadedState, middlewareEnhancer)\n\n  return store\n}","export const selectAccountInfo = state => state.account\nexport const selectValidators = state => state.validators\nexport const selectDelegations = state => state.delegations","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './index.scss'\n\ninterface Props {\n  index: number\n}\n\nclass CMP extends Component<Props> {\n\n  componentDidMount() { }\n\n  render() {\n    const { index } = this.props\n\n    return <div className=\"navbar\">\n      <div>\n        <Link className={index === 0 ? \"selected\" : \"\"} to=\"/\">\n          我的委托\n      </Link>\n        <Link className={index === 1 ? \"selected\" : \"\"} to=\"/validators\">\n          验证者\n      </Link>\n      </div>\n    </div>\n  }\n}\n\nexport default CMP\n","export default {\n  // denom: 'uatom'\n  denom: 'muon'\n}","import tokenConfig from './token'\n\nexport default {\n  transfer: { \"amount\": [{ \"amount\": \"3000\", \"denom\": tokenConfig.denom }], \"gas\": \"120000\" },\n  retainFee: 0.01,\n}","import BN from 'big.js'\nimport numeral from 'numeral'\nimport feeConfig from '../config/fee'\n\nBN.DP = 20\nBN.RM = 0\n\n// interface __MsgAmount {\n//   amount: string\n//   denom: string\n// }\n\ninterface __Msg {\n  type: string\n  value: any\n}\n\nexport function createTxPayload(from: string, msg: __Msg[], memo: string) {\n  const payload = {\n    from: from,\n    chainType: 'COSMOS',\n    fee: feeConfig.transfer,\n    msg,\n    memo,\n  }\n  return payload\n}\n\nexport function createTransferMsg(fromAddr, toAddr, amount, denom) {\n  return {\n    \"type\": \"cosmos-sdk/MsgSend\",\n    \"value\": {\n      \"amount\": [{ \"amount\": amount, \"denom\": denom }],\n      \"from_address\": fromAddr,\n      \"to_address\": toAddr\n    }\n  }\n}\n\nexport function createDelegateMsg(delegatorAddress, validatorAddress, amount, denom) {\n  return {\n    \"type\": \"cosmos-sdk/MsgDelegate\",\n    \"value\": {\n      \"delegator_address\": delegatorAddress,\n      \"validator_address\": validatorAddress,\n      \"amount\": { \"amount\": amount, \"denom\": denom },\n    }\n  }\n}\n\nexport function createUnDelegateMsg(delegatorAddress, validatorAddress, amount, denom) {\n  return {\n    \"type\": \"cosmos-sdk/MsgUndelegate\",\n    \"value\": {\n      \"delegator_address\": delegatorAddress,\n      \"validator_address\": validatorAddress,\n      \"amount\": { \"amount\": amount, \"denom\": denom },\n    }\n  }\n}\n\nexport function createWithdrawMsg(delegatorAddress, validatorAddress, amount, denom) {\n  return {\n    \"type\": \"cosmos-sdk/MsgWithdrawDelegationReward\",\n    \"value\": {\n      \"delegator_address\": delegatorAddress,\n      \"validator_address\": validatorAddress,\n      \"amount\": { \"amount\": amount, \"denom\": denom },\n    }\n  }\n}\n\nexport function createRedelegateMsg(delegatorAddress, validatorSrcAddress, validatorDstAddress, amount, denom) {\n  return {\n    \"type\": \"cosmos-sdk/MsgBeginRedelegate\",\n    \"value\": {\n      \"delegator_address\": delegatorAddress,\n      \"validator_src_address\": validatorSrcAddress,\n      \"validator_dst_address\": validatorDstAddress,\n      \"value\": {\n        \"amount\": { \"amount\": amount, \"denom\": denom },\n      }\n    }\n  }\n}\n\nexport const ellipsis = (str: string, num: number = 20): string => {\n  if (str && str.length > num) {\n    return `${str.substring(0, num / 2)}...${str.substring(str.length - num / 2, str.length)}`\n  }\n  return str\n}\n\nexport const toBN = (x) => new BN(x)\n\nexport const uatom = (atom: string | number) => {\n  return new BN(atom, 10).times(1e6).toString()\n}\n\nexport const atom = (uatom: string | number) => {\n  return new BN(uatom).div(1e6).toString()\n}\n\nexport const thousandCommas = (num: string | number) => {\n  return numeral(num).format('0,0.[0000]')\n}\n\nexport const isExist = (o: any) => {\n  return typeof o !== 'undefined'\n}\n\nexport const getBalanceFromAccount = (account) => {\n  const v = account\n  if (!v || !v.coins || !Array.isArray(v.coins)) return 0\n  const atom = v.coins.find(\n    c => c.denom === 'uatom' || c.denom === 'muon'\n  )\n  return atom.amount || 0\n}\n\nexport const getDeletationBalance = (delegations) => {\n  let balance = 0\n  delegations.forEach(d => {\n    balance += d.shares * 1\n  })\n  return balance.toFixed(0)\n}\n\nexport const getRewardBalance = (rewards) => {\n  let balance = 0\n  rewards.forEach(d => {\n    balance += d.amount * 1\n  })\n  return balance.toFixed(0)\n}\n\nexport const getUnbondingBalance = (unbondingDelegations) => {\n  let balance = 0\n  unbondingDelegations.forEach(d => {\n    if (Array.isArray(d.entries)) {\n      d.entries.forEach(o => {\n        balance += o.balance * 1\n      })\n    }\n  })\n  return balance.toFixed(0)\n}","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { selectAccountInfo } from '../../lib/redux/selectors'\nimport './index.scss'\nimport { toBN, atom, thousandCommas, ellipsis, isExist } from 'lib/utils'\n\ninterface Props {\n  account: any\n}\n\nclass CMP extends Component<Props> {\n\n  componentDidMount() { }\n\n  render() {\n    const { account } = this.props\n    const { address, balance, rewardBalance, refundingBalance, delegateBalance } = account\n    const atomPrice = 30\n\n    return (\n      <div className=\"account-card\">\n        <div className=\"account-top\">\n          <div className=\"account-top-address\">\n            <strong>Cosmos Wallet</strong>\n            <span>{ellipsis(address || '获取账号中...', 24)}</span>\n          </div>\n          <div className=\"account-top-amount\">\n            <strong>{isExist(balance) ? thousandCommas(atom(balance)) : '~'}</strong>\n            <span>¥ {isExist(balance) ? thousandCommas(toBN(atom(balance)).times(atomPrice).toString()) : '~'}</span>\n          </div>\n        </div>\n        <div className=\"account-bottom\">\n          <div>\n            <div>\n              <span>可用余额</span>\n              <i>{isExist(balance) ? thousandCommas(atom(balance)) : '~'}</i>\n            </div>\n            <div>\n              <span>收益</span>\n              <i>{isExist(rewardBalance) ? thousandCommas(atom(rewardBalance)) : '~'}</i>\n            </div>\n          </div>\n          <div className=\"split-line\"></div>\n          <div>\n            <div>\n              <span>委托</span>\n              <i>{isExist(delegateBalance) ? thousandCommas(atom(delegateBalance)) : '~'}</i>\n            </div>\n            <div>\n              <span>赎回中</span>\n              <i>{isExist(refundingBalance) ? thousandCommas(atom(refundingBalance)) : '~'}</i>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    account: selectAccountInfo(state),\n  }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CMP)\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Link } from 'react-router-dom'\nimport { selectDelegations, selectValidators } from '../../lib/redux/selectors'\nimport './index.scss'\nimport { atom, thousandCommas } from 'lib/utils'\n\ninterface Props {\n  delegations: any[]\n  validators: any[]\n}\n\n\nclass CMP extends Component<Props> {\n\n  componentDidMount() { }\n\n  renderItem(d, v, index) {\n    if (!v) return null\n    return <Link className=\"dl-card\" key={index} to={`/validators/${v.operator_address}`}>\n      <strong>{v.description.moniker}</strong>\n      <div>\n        <span>已委托</span>\n        <i>{thousandCommas(atom(d.shares))}</i>\n      </div>\n    </Link>\n  }\n\n  render() {\n    const { delegations, validators } = this.props\n\n    return (\n      <div className=\"delegations\">\n        {!!delegations && delegations.map((d, index) => {\n          const v = validators.find(el => el.operator_address === d.validator_address)\n          return this.renderItem(d, v, index)\n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    validators: selectValidators(state),\n    delegations: selectDelegations(state),\n  }\n}\n\nconst mapDispatchToProps = {}\nexport default connect(mapStateToProps, mapDispatchToProps)(CMP)\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { withRouter } from 'react-router-dom'\nimport './index.scss'\nimport NavBar from '../../components/navBar'\nimport AccountCard from '../../components/accountCard'\nimport DelegationList from '../../components/delegationList'\n\ninterface Props {\n  validators: any[]\n  updateValidators: (value: any) => any\n  updateDelegations: (value: any) => any\n  updateAccount: (value: any) => any\n}\n\nclass Page extends Component<Props, any> {\n\n  renderDelegateBanner() {\n    return <div className=\"banner\">\n      <div onClick={() => { }}>\n        <img src=\"/images/banner.png\" alt=\"staking\" />\n      </div>\n    </div>\n  }\n\n\n  render() {\n    return (\n      <div className=\"home\" id=\"home\">\n        <NavBar index={0} />\n        <AccountCard />\n        <DelegationList />\n        {this.renderDelegateBanner()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = _state => {\n  return {\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Page))\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Link } from 'react-router-dom'\nimport './index.scss'\nimport { atom, thousandCommas } from 'lib/utils'\n\ninterface Props {\n  validator: any\n}\n\nclass CMP extends Component<Props> {\n\n  componentDidMount() { }\n\n  render() {\n\n    const v = this.props.validator\n    const tokens = atom(v.tokens)\n    const percent = (tokens / 237538998).toFixed(3)\n\n    return <Link className=\"validator\" to={`/validators/${v.operator_address}`}>\n      <div className=\"logo\">\n        <img alt=\"logo\" src={v.description.logo || '../../../images/default-validator.png'} />\n      </div>\n      <div className=\"v-left\">\n        <strong>{v.description.moniker}</strong>\n        <span>{thousandCommas(tokens)} ({percent}%)</span>\n      </div>\n      <div className=\"v-right\">\n        <strong>7%</strong>\n        <span>年化收益</span>\n      </div>\n    </Link>\n  }\n}\n\nconst mapStateToProps = _state => {\n  return {\n  }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CMP)\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { withRouter } from 'react-router-dom'\nimport { selectValidators } from '../../lib/redux/selectors'\nimport ValidatorCard from '../../components/validatorCard'\nimport './index.scss'\n\ninterface Props {\n  validators: any[]\n}\n\nclass Page extends Component<Props> {\n\n  componentDidMount() {\n\n  }\n\n\n  render() {\n    const { validators } = this.props\n    return (\n      <div className=\"validator-list\">\n        {\n          validators.map(v => {\n            return <ValidatorCard validator={v} key={v.operator_address} />\n          })\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    validators: selectValidators(state),\n  }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(Page))\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { withRouter } from 'react-router-dom'\nimport ValidatorList from '../../components/validatorList'\nimport NavBar from '../../components/navBar'\nimport './index.scss'\n\ninterface Props {\n  validators: any[]\n}\n\nclass Page extends Component<Props> {\n\n  componentDidMount() {\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"validators\">\n        <NavBar index={1} />\n        <ValidatorList />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = _state => {\n  return {\n  }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(Page))\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { withRouter, Link } from 'react-router-dom'\nimport { selectValidators } from '../../lib/redux/selectors'\nimport { ellipsis, thousandCommas, atom } from '../../lib/utils'\nimport './index.scss'\n\ninterface Props {\n  validators: any\n  match: any\n}\n\nclass Page extends Component<Props> {\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    const { validators, match } = this.props\n    const id = match.params.id\n    const v = validators.find(v => v.operator_address === id)\n\n    console.log(v, match)\n    if (!v) return <h1 className=\"loading-text\">Loading...</h1>\n\n    return (\n      <div className=\"validator-detail\">\n        <section>\n          <div className=\"top\">\n            <div className=\"logo\">\n              <img alt=\"logo\" src={v.description.logo || '../../../images/default-validator.png'} />\n            </div>\n            <div className=\"left\">\n              <strong>{v.description.moniker}</strong>\n              <span>{ellipsis(v.operator_address, 24)}</span>\n            </div>\n          </div>\n          <div className=\"desc\">{v.description.details || 'no description'}</div>\n        </section>\n\n        <ul>\n          <li>\n            <span>总委托</span>\n            <i>{thousandCommas(atom(v.tokens))} ATOM</i>\n          </li>\n          <li>\n            <span>验证者委托</span>\n            <i>{thousandCommas(atom(v.delegator_shares))} ATOM</i>\n          </li>\n          <li>\n            <span>委托者</span>\n            <i>~</i>\n          </li>\n          <li>\n            <span>佣金</span>\n            <i>{(+v.commission.rate).toFixed(3)} %</i>\n          </li>\n          <li>\n            <span>年化收益</span>\n            <i>{v.annualized_returns} %</i>\n          </li>\n        </ul>\n\n        <div className=\"toolbar\">\n          <Link to={`/undelegate/${v.operator_address}`}>赎回</Link>\n          <Link to={`/delegate/${v.operator_address}`}>委托</Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    validators: selectValidators(state)\n  }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(Page))\n","window['imToken'] = window['imToken'] || {\n  callPromisifyAPI: (apiName: string, payload: any): Promise<any> => {\n    console.log(apiName, payload)\n    switch (apiName) {\n      case 'cosmos.getAccounts':\n        return Promise.resolve(['cosmos16gdxm24ht2mxtpz9cma6tr6a6d47x63hlq4pxt'])\n      case 'cosmos.getProvider':\n        return Promise.resolve('https://stargate.cosmos.network')\n      case 'private.getHeaders':\n        return Promise.resolve(`{\"Authorization\":\"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkZXZpY2VUb2tlbiI6IkVBQjZBRTJELThFNEYtNEFDMS1CODM4LTA5MkQwMzE2NjlGQSIsImp0aSI6ImltMTR4NUxZck11Q1lxaXdTRzVBeFhaOXlGRDlIdml2VmJKdDVMRiJ9.rkJ2jziqRKwHvUKX2xkrkA2CDppGegElgVuZ2syHf5Y\",\"X-IDENTIFIER\":\"im14x5LYrMuCYqiwSG5AxXZ9yFD9HvivVbJt5LF\",\"X-CLIENT-VERSION\":\"ios:2.3.1.515:14\",\"X-DEVICE-TOKEN\":\"EAB6AE2D-8E4F-4AC1-B838-092D031669FA\",\"X-LOCALE\":\"en-US\",\"X-CURRENCY\":\"USD\",\"X-DEVICE-LOCALE\":\"en\",\"X-APP-ID\":\"im.token.app\",\"X-API-KEY\":\"3bdc0a49ba634a8e8f3333f8e66e0b84\",\"Content-Type\":\"application/json\"}`)\n      default:\n        return Promise.resolve()\n    }\n  }\n}\n\nconst imToken = window['imToken']\n/**\n * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ rn api requests ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n */\n\nexport function getAccounts() {\n  return imToken.callPromisifyAPI('cosmos.getAccounts')\n}\n\nexport function getProvider() {\n  return imToken.callPromisifyAPI('cosmos.getProvider')\n}\n\nexport function getHeaders() {\n  return imToken.callPromisifyAPI('private.getHeaders')\n    .then(headers => JSON.parse(headers))\n    .then(headers => {\n      delete headers['X-LOCALE']\n      return {\n        // 'Access-Control-Allow-Origin': 'http://localhost:3000',\n        // 'Access-Control-Allow-Credentials': 'true',\n        // ...headers,\n      }\n    })\n}\n\nexport function sendTransaction(payload) {\n  return imToken.callPromisifyAPI('cosmos.sendTransaction', payload)\n}","import { toBN } from './utils'\n\nexport const validAmount = (amount: number | string, balance: number | string, retainFee = 0) => {\n\n  const num = Number(amount)\n\n  if (isNaN(num)) {\n    return [false, '金额不合法']\n  }\n\n  if (num <= 0) {\n    return [false, '请输入大于 0 的金额']\n  }\n\n  const bnAmounnt = toBN(num)\n\n  if (bnAmounnt.plus(retainFee).gt(balance)) {\n    if (bnAmounnt.lt(balance)) {\n      return [false, '矿工费不够']\n    }\n    return [false, '超出可用数量']\n  }\n\n  return [true, null]\n}","export default {\n  \"operator_address\": \"cosmosvaloper1zkupr83hrzkn3up5elktzcq3tuft8nxsmwdqgp\",\n}","import React, { Component } from 'react'\nimport './index.scss'\nimport { atom, uatom, thousandCommas, isExist, createTxPayload, createDelegateMsg } from 'lib/utils'\nimport { sendTransaction } from 'lib/sdk'\nimport { validAmount } from 'lib/validator'\nimport bannerConfig from '../../config/banner'\nimport tokenConfig from '../../config/token'\nimport feeConfig from '../../config/fee'\n\ninterface Props {\n  account: any\n}\n\nclass CMP extends Component<Props> {\n\n  state = {\n    amount: '',\n  }\n\n  componentDidMount() {\n  }\n\n  afterOpenModal() { }\n\n  onSubmit = () => {\n    const { account } = this.props\n    const { balance, address } = account\n    const { amount } = this.state\n    const [valid, msg] = validAmount(amount, atom(balance), feeConfig.retainFee)\n    if (!valid) {\n      return alert(msg)\n    }\n\n    // send delegate apiCall\n    const txPayload = createTxPayload(\n      address,\n      [createDelegateMsg(address, bannerConfig.operator_address, uatom(amount), tokenConfig.denom)],\n      'delegate from imToken',\n    )\n\n    sendTransaction(txPayload).then(txHash => {\n      alert('发送成功: ' + txHash)\n      console.log(txHash)\n    }).catch(e => {\n      alert('发送失败: ' + e.message)\n    })\n  }\n\n  onChange = (event) => {\n    this.setState({ amount: event.target.value })\n  }\n\n  render() {\n    const { account } = this.props\n    const { balance } = account\n    const { amount } = this.state\n    const atomBalance = isExist(balance) ? thousandCommas(atom(balance)) : 0\n    const disabled = !amount\n    return (\n      <div className=\"form-inner\">\n        <div className=\"form-header\">\n          <span>可用余额</span>\n          <i>{atomBalance} ATOM</i>\n        </div>\n        <input\n          type=\"number\"\n          placeholder=\"输入金额\"\n          value={amount}\n          onChange={this.onChange}\n          max={atomBalance}\n          min={0.000001}\n        />\n        <button disabled={disabled} className=\"form-button\" onClick={this.onSubmit}>委托</button>\n      </div>\n    )\n  }\n}\n\nexport default CMP\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { withRouter } from 'react-router-dom'\nimport { selectValidators, selectAccountInfo } from '../../lib/redux/selectors'\nimport { ellipsis, } from '../../lib/utils'\nimport DelegateForm from '../../components/delegateForm'\nimport './index.scss'\n\ninterface Props {\n  validators: any\n  account: any\n  match: any\n}\n\nclass Page extends Component<Props> {\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    const { validators, account, match } = this.props\n    const id = match.params.id\n    const v = validators.find(v => v.operator_address === id)\n\n    console.log(v, match)\n    if (!v) return <h1 className=\"loading-text\">Loading...</h1>\n\n    return (\n      <div className=\"delegate-page\">\n        <div className=\"validator-detail\">\n          <section>\n            <div className=\"top\">\n              <div className=\"logo\">\n                <img alt=\"logo\" src={v.description.logo || '../../../images/default-validator.png'} />\n              </div>\n              <div className=\"left\">\n                <strong>{v.description.moniker}</strong>\n                <span>{ellipsis(v.operator_address, 24)}</span>\n              </div>\n            </div>\n          </section>\n        </div>\n        <DelegateForm account={account} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    validators: selectValidators(state),\n    account: selectAccountInfo(state),\n  }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(Page))\n","import React, { Component } from 'react'\nimport './index.scss'\nimport { atom, uatom, thousandCommas, isExist, createTxPayload, createUnDelegateMsg } from 'lib/utils'\nimport { sendTransaction } from 'lib/sdk'\nimport { validAmount } from 'lib/validator'\nimport tokenConfig from '../../config/token'\n\ninterface Props {\n  account: any\n  delegations: any\n}\n\nclass CMP extends Component<Props, any> {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      amount: '',\n      selectedDelegation: props.delegations[0]\n    }\n  }\n\n\n  componentDidMount() {\n  }\n\n  afterOpenModal() { }\n\n  onSubmit = () => {\n    const { account } = this.props\n    // TODO: handle select\n    const { selectedDelegation } = this.state\n    const delegateBalance = selectedDelegation.shares\n    const { address } = account\n    const { amount } = this.state\n    const [valid, msg] = validAmount(amount, atom(delegateBalance))\n    if (!valid) {\n      return alert(msg)\n    }\n\n    // send delegate apiCall\n    const txPayload = createTxPayload(\n      address,\n      [createUnDelegateMsg(\n        address,\n        selectedDelegation.validator_address,\n        uatom(amount),\n        tokenConfig.denom)\n      ],\n      'undelegate from imToken',\n    )\n\n    sendTransaction(txPayload).then(txHash => {\n      alert('发送成功: ' + txHash)\n      console.log(txHash)\n    }).catch(e => {\n      alert('发送失败: ' + e.message)\n    })\n  }\n\n  onChange = (event) => {\n    this.setState({ amount: event.target.value })\n  }\n\n  render() {\n    const { selectedDelegation } = this.state\n\n    if (!selectedDelegation) return null\n\n    const delegateBalance = selectedDelegation.shares\n    const { amount } = this.state\n    const atomBalance = isExist(delegateBalance) ? thousandCommas(atom(delegateBalance)) : 0\n    const disabled = !amount\n    return (\n      <div className=\"form-inner\">\n        <div className=\"form-header\">\n          <span>已抵押</span>\n          <i>{atomBalance} ATOM</i>\n        </div>\n        <input\n          type=\"number\"\n          placeholder=\"输入金额\"\n          value={amount}\n          onChange={this.onChange}\n          max={atomBalance}\n          min={0.000001}\n        />\n        <button disabled={disabled} className=\"form-button\" onClick={this.onSubmit}>取消委托</button>\n      </div>\n    )\n  }\n}\n\nexport default CMP\n\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { withRouter } from 'react-router-dom'\nimport { selectValidators, selectAccountInfo, selectDelegations } from '../../lib/redux/selectors'\nimport { ellipsis, } from '../../lib/utils'\nimport UnDelegateForm from '../../components/undelegateForm'\nimport './index.scss'\n\ninterface Props {\n  validators: any\n  delegations: any\n  account: any\n  match: any\n}\n\nclass Page extends Component<Props> {\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    const { validators, account, delegations, match } = this.props\n    const id = match.params.id\n    const v = validators.find(v => v.operator_address === id)\n\n    console.log(v, match)\n    if (!v) return <h1 className=\"loading-text\">Loading...</h1>\n\n    return (\n      <div className=\"delegate-page\">\n        <div className=\"validator-detail\">\n          <section>\n            <div className=\"top\">\n              <div className=\"logo\">\n                <img alt=\"logo\" src={v.description.logo || '../../../images/default-validator.png'} />\n              </div>\n              <div className=\"left\">\n                <strong>{v.description.moniker}</strong>\n                <span>{ellipsis(v.operator_address, 24)}</span>\n              </div>\n            </div>\n          </section>\n        </div>\n        <UnDelegateForm account={account} delegations={delegations} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    validators: selectValidators(state),\n    delegations: selectDelegations(state),\n    account: selectAccountInfo(state),\n  }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(Page))\n","import Axios from \"axios\"\nimport { getHeaders, getProvider } from './sdk'\n\n/**\n * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ node requests ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n */\n\nlet _headers = null\nlet _provider = null\n\nexport async function initRequestDependency() {\n  return {\n    headers: _headers || await getHeaders(),\n    provider: _provider || await getProvider()\n  }\n}\n\nfunction get(url, params = {}) {\n  return initRequestDependency().then(({ headers, provider }) => {\n    const _url = `${provider}/${url}`\n    return Axios({ method: 'get', url: _url, params, headers }).then(res => {\n      if (res.data) {\n        return res.data\n      } else {\n        throw new Error(`null response ${url} ${JSON.stringify(params)}`)\n      }\n    }).catch(error => {\n      console.warn(error)\n    })\n  })\n}\n\nexport function getValidators() {\n  return get(`staking/validators`).then(validators => validators || [])\n}\n\n// Normalize account response\n// https://github.com/cosmos/cosmos-sdk/issues/3885\nexport function getAccount(address) {\n  const emptyAccount = {\n    coins: [],\n    sequence: `0`,\n    account_number: `0`,\n  }\n  const url = `auth/accounts/${address}`\n  return get(url, {}).then(res => {\n    if (!res) throw new Error('no response')\n    let account = res.value || emptyAccount\n    if (res.type === `auth/DelayedVestingAccount`) {\n      if (!account.BaseVestingAccount) {\n        return emptyAccount\n      }\n      account = Object.assign({},\n        account.BaseVestingAccount.BaseAccount,\n        account.BaseVestingAccount,\n      )\n      delete account.BaseAccount\n      delete account.BaseVestingAccount\n    }\n    return account\n  }).catch(err => {\n    // if account not found, return null instead of throwing\n    if (err.message.includes(`account bytes are empty`) ||\n      err.message.includes(`failed to prove merkle proof`)) {\n      return emptyAccount\n    }\n    // throw err\n    console.warn(err)\n  })\n}\n\nexport const getDelegations = (address) => {\n  const url = `staking/delegators/${address}/delegations`\n  return get(url, {}).then(delegations => delegations || [])\n}\n\nexport const getRewards = (delegatorAddr) => {\n  const url = `distribution/delegators/${delegatorAddr}/rewards`\n  return get(url, {}).then(rewards => rewards || [])\n}\n\nexport const getUnbondingDelegations = (address) => {\n  const url = `staking/delegators/${address}/unbonding_delegations`\n  return get(url, {}).then(unbondingDelegations => unbondingDelegations || [])\n}\n\nexport const genDelegationTx = (delegatorAddr) => {\n  const url = `staking/delegators/${delegatorAddr}/delegations`\n  return get(url, {})\n}\n\n/**\n * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ server rpc requests ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n */\n\nfunction createRpcRequestData(method, params) {\n  return {\n    jsonrpc: '2.0',\n    id: 1,\n    method,\n    params: params || [],\n  }\n}\n\nfunction serverRequest(url, method, params) {\n  return initRequestDependency().then(({ headers }) => {\n    return Axios({\n      method: 'get',\n      url,\n      data: createRpcRequestData(method, params),\n      timeout: 5,\n      headers: headers,\n      withCredentials: true\n    }).then(res => {\n      if (res.data) {\n        return res.data\n      } else {\n        throw new Error(`null response ${url} ${method} ${JSON.stringify(params)}`)\n      }\n    }).catch(error => {\n      console.warn(error)\n    })\n  })\n}\n\nexport function getTxListByAddress(delegator: string, validator: string) {\n  const url = `https://api.dev.tokenlon.im/v1/cosmos`\n  const params = [{\n    address: delegator,\n    tags: {\n      action: ['delegate', 'undelegate'],\n      delegator,\n      validator,\n    }\n  }]\n  return serverRequest(url, 'wallet.getMsgListByAddress', [params]).then(data => data || [])\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { connect } from \"react-redux\"\nimport { selectValidators } from '../../lib/redux/selectors'\nimport Home from '../home'\nimport Validators from '../validators'\nimport ValidatorDetail from '../validatorDetail'\nimport Delegate from '../delegate'\nimport UnDelegate from '../undelegate'\nimport './index.scss'\nimport { updateValidators, updateAccount, updateDelegations } from 'lib/redux/actions'\nimport * as api from 'lib/api'\nimport * as sdk from 'lib/sdk'\nimport * as utils from 'lib/utils'\n\ninterface Props {\n  validators: any[]\n  updateValidators: (value: any) => any\n  updateDelegations: (value: any) => any\n  updateAccount: (value: any) => any\n}\n\nclass App extends Component<Props> {\n\n  componentWillMount() {\n    this.updateAsyncData()\n  }\n\n  updateAsyncData = () => {\n    const { updateAccount, updateDelegations, updateValidators } = this.props\n\n    sdk.getAccounts().then(accounts => {\n      const address = accounts[0]\n\n      updateAccount({ address })\n\n      api.getRewards(address).then(utils.getRewardBalance).then(b => {\n        updateAccount({ rewardBalance: b })\n      })\n\n      api.getUnbondingDelegations(address).then(utils.getUnbondingBalance).then(b => {\n        updateAccount({ refundingBalance: b })\n      })\n\n      api.getAccount(address).then(accountInfo => {\n        const balance = utils.getBalanceFromAccount(accountInfo)\n        updateAccount({ ...accountInfo, balance })\n      })\n\n      api.getDelegations(address).then(delegations => {\n        const delegateBalance = utils.getDeletationBalance(delegations)\n        updateDelegations(delegations)\n        updateAccount({ delegateBalance })\n      })\n    })\n\n    api.getValidators().then(updateValidators)\n  }\n\n  render() {\n    return <BrowserRouter basename=\"/cosmos\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/validators\" component={Validators} />\n        <Route path=\"/validators/:id\" component={ValidatorDetail} />\n        <Route path=\"/delegate/:id\" component={Delegate} />\n        <Route path=\"/undelegate/:id\" component={UnDelegate} />\n      </Switch>\n    </BrowserRouter>\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    validators: selectValidators(state),\n  }\n}\n\nconst mapDispatchToProps = {\n  updateAccount,\n  updateDelegations,\n  updateValidators\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import * as types from './constant'\n\nexport const updateAccount = (account) => {\n  return {\n    type: types.UPDATE_ACCOUNT,\n    payload: {\n      account,\n    }\n  }\n}\n\nexport const updateValidators = (validators) => {\n  return {\n    type: types.UPDATE_VALIDATORS,\n    payload: {\n      validators,\n    }\n  }\n}\n\nexport const updateDelegations = (delegations) => {\n  return {\n    type: types.UPDATE_DELEGATIONS,\n    payload: {\n      delegations,\n    }\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore from './lib/redux/configureStore'\n\nimport App from './pages/app'\nimport './index.scss'\n\nconst store = configureStore(undefined)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
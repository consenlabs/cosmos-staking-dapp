{"version":3,"sources":["serviceWorker.js","lib/redux/constant.ts","lib/redux/reducers.ts","lib/redux/configureStore.ts","lib/redux/selectors.ts","config/token.ts","config/fee.ts","lib/utils.ts","lib/sdk.ts","lib/validator.ts","config/banner.ts","components/delegateModal/index.tsx","components/undelegateModal/index.tsx","components/accountCard/index.tsx","components/delegationList/index.tsx","lib/api.ts","pages/home/index.tsx","lib/redux/actions.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","UPDATE_ACCOUNT","UPDATE_VALIDATORS","UPDATE_DELEGATIONS","initialState","account","validators","delegations","device","state","arguments","length","undefined","action","produce","draft","type","types","payload","Object","objectSpread","logger","store","next","console","group","info","result","log","getState","groupEnd","selectAccountInfo","selectValidators","selectDelegations","token","denom","fee","transfer","amount","tokenConfig","gas","retainFee","createTxPayload","from","msg","memo","chainType","feeConfig","createDelegateMsg","delegatorAddress","validatorAddress","value","delegator_address","validator_address","createUnDelegateMsg","BN","DP","RM","toBN","x","uatom","atom","times","toString","div","thousandCommas","num","numeral","format","isExist","o","getBalanceFromAccount","v","coins","Array","isArray","find","c","getDeletationBalance","balance","forEach","d","shares","toFixed","getRewardBalance","rewards","getUnbondingBalance","unbondingDelegations","entries","callPromisifyAPI","apiName","Promise","resolve","imToken","sendTransaction","validAmount","Number","isNaN","bnAmounnt","plus","gt","lt","banner","operator_address","customStyles","content","top","left","right","bottom","borderRadius","overlay","backgroundColor","CMP","onSubmit","_this","props","address","_validAmount","_validAmount2","slicedToArray","valid","alert","bannerConfig","then","txHash","onRequestClose","onDelegateSuccess","catch","e","message","onChange","event","setState","target","_this$props","this","visible","atomBalance","disabled","react_default","a","createElement","lib_default","isOpen","closeTimeoutMS","onAfterOpen","afterOpenModal","style","contentLabel","className","placeholder","max","min","onClick","Component","connect","selectedDelegation","delegateBalance","_this$props2","rewardBalance","refundingBalance","str","concat","substring","ellipsis","onPress","delegation","onItemPress","index","_this2","key","description","moniker","_this3","map","el","renderItem","_headers","_provider","initRequestDependency","_initRequestDependency","apply","_callee","regenerator_default","wrap","_context","prev","t0","headers","JSON","parse","sent","t1","t2","t3","abrupt","provider","stop","get","url","params","_ref","_url","Axios","method","res","data","Error","stringify","error","warn","getDelegations","getRewards","delegatorAddr","getUnbondingDelegations","Page","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateAsyncData","updateAccount","updateDelegations","updateValidators","accounts","api","utils","b","emptyAccount","sequence","account_number","BaseVestingAccount","assign","BaseAccount","err","includes","accountInfo","handleDelegate","delegateModalVisible","handleUnDelegate","undelegateModalVisible","handleModalClose","src","alt","_this$state","id","components_accountCard","components_delegationList","renderDelegateBanner","components_delegateModal","components_undelegateModal","mapDispatchToProps","preloadedState","middlewares","thunkMiddleware","middlewareEnhancer","applyMiddleware","createStore","rootReducer","configureStore","ReactDOM","render","es","pages_home","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d401675.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const UPDATE_ACCOUNT = 'UPDATE_ACCOUNT'\nexport const UPDATE_VALIDATORS = 'UPDATE_VALIDATORS'\nexport const UPDATE_DELEGATIONS = 'UPDATE_DELEGATIONS'","import produce from 'immer'\nimport * as types from './constant'\n\nconst initialState = {\n  account: {\n  },\n  validators: [],\n  delegations: [],\n}\n\nexport default function device(state = initialState, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case types.UPDATE_ACCOUNT:\n        const account = action.payload.account\n        if (account && typeof account === 'object') {\n          draft.account = { ...draft.account, ...action.payload.account }\n        }\n        return\n      case types.UPDATE_VALIDATORS:\n        draft.validators = action.payload.validators\n        return\n      case types.UPDATE_DELEGATIONS:\n        draft.delegations = action.payload.delegations\n        return\n      default:\n        return draft\n    }\n  })\n}\n","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n\nimport rootReducer from './reducers'\n\nconst logger = store => next => action => {\n  console.group(action.type)\n  console.info('dispatching', action)\n  let result = next(action)\n  console.log('next state', store.getState())\n  console.groupEnd()\n  return result\n}\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [logger, thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n\n  const store = createStore(rootReducer, preloadedState, middlewareEnhancer)\n\n  return store\n}","export const selectAccountInfo = state => state.account\nexport const selectValidators = state => state.validators\nexport const selectDelegations = state => state.delegations","export default {\n  // denom: 'atom'\n  denom: 'muon'\n}","import tokenConfig from './token'\n\nexport default {\n  transfer: { \"amount\": [{ \"amount\": \"3000\", \"denom\": tokenConfig.denom }], \"gas\": \"120000\" },\n  retainFee: 0.01,\n}","import BN from 'big.js'\nimport numeral from 'numeral'\nimport feeConfig from '../config/fee'\n\nBN.DP = 20\nBN.RM = 0\n\n// interface __MsgAmount {\n//   amount: string\n//   denom: string\n// }\n\ninterface __Msg {\n  type: string\n  value: any\n}\n\nexport function createTxPayload(from: string, msg: __Msg[], memo: string) {\n  const payload = {\n    from: from,\n    chainType: 'COSMOS',\n    fee: feeConfig.transfer,\n    msg,\n    memo,\n  }\n  return payload\n}\n\nexport function createTransferMsg(fromAddr, toAddr, amount, denom) {\n  return {\n    \"type\": \"cosmos-sdk/MsgSend\",\n    \"value\": {\n      \"amount\": [{ \"amount\": amount, \"denom\": denom }],\n      \"from_address\": fromAddr,\n      \"to_address\": toAddr\n    }\n  }\n}\n\nexport function createDelegateMsg(delegatorAddress, validatorAddress, amount, denom) {\n  return {\n    \"type\": \"cosmos-sdk/MsgDelegate\",\n    \"value\": {\n      \"delegator_address\": delegatorAddress,\n      \"validator_address\": validatorAddress,\n      \"amount\": { \"amount\": amount, \"denom\": denom },\n    }\n  }\n}\n\nexport function createUnDelegateMsg(delegatorAddress, validatorAddress, amount, denom) {\n  return {\n    \"type\": \"cosmos-sdk/MsgUndelegate\",\n    \"value\": {\n      \"delegator_address\": delegatorAddress,\n      \"validator_address\": validatorAddress,\n      \"amount\": { \"amount\": amount, \"denom\": denom },\n    }\n  }\n}\n\nexport function createWithdrawMsg(delegatorAddress, validatorAddress, amount, denom) {\n  return {\n    \"type\": \"cosmos-sdk/MsgWithdrawDelegationReward\",\n    \"value\": {\n      \"delegator_address\": delegatorAddress,\n      \"validator_address\": validatorAddress,\n      \"amount\": { \"amount\": amount, \"denom\": denom },\n    }\n  }\n}\n\nexport function createRedelegateMsg(delegatorAddress, validatorSrcAddress, validatorDstAddress, amount, denom) {\n  return {\n    \"type\": \"cosmos-sdk/MsgBeginRedelegate\",\n    \"value\": {\n      \"delegator_address\": delegatorAddress,\n      \"validator_src_address\": validatorSrcAddress,\n      \"validator_dst_address\": validatorDstAddress,\n      \"value\": {\n        \"amount\": { \"amount\": amount, \"denom\": denom },\n      }\n    }\n  }\n}\n\nexport const ellipsis = (str: string, num: number = 20): string => {\n  if (str && str.length > num) {\n    return `${str.substring(0, num / 2)}...${str.substring(str.length - num / 2, str.length)}`\n  }\n  return str\n}\n\nexport const toBN = (x) => new BN(x)\n\nexport const uatom = (atom: string | number) => {\n  return new BN(atom, 10).times(1e6).toString()\n}\n\nexport const atom = (uatom: string | number) => {\n  return new BN(uatom).div(1e6).toString()\n}\n\nexport const thousandCommas = (num: string | number) => {\n  return numeral(num).format('0,0.[0000]')\n}\n\nexport const isExist = (o: any) => {\n  return typeof o !== 'undefined'\n}\n\nexport const getBalanceFromAccount = (account) => {\n  const v = account\n  if (!v || !v.coins || !Array.isArray(v.coins)) return 0\n  const atom = v.coins.find(\n    c => c.denom === 'uatom' || c.denom === 'muon'\n  )\n  return atom.amount || 0\n}\n\nexport const getDeletationBalance = (delegations) => {\n  let balance = 0\n  delegations.forEach(d => {\n    balance += d.shares * 1\n  })\n  return balance.toFixed(0)\n}\n\nexport const getRewardBalance = (rewards) => {\n  let balance = 0\n  rewards.forEach(d => {\n    balance += d.amount * 1\n  })\n  return balance.toFixed(0)\n}\n\nexport const getUnbondingBalance = (unbondingDelegations) => {\n  let balance = 0\n  unbondingDelegations.forEach(d => {\n    if (Array.isArray(d.entries)) {\n      d.entries.forEach(o => {\n        balance += o.balance * 1\n      })\n    }\n  })\n  return balance.toFixed(0)\n}","window['imToken'] = window['imToken'] || {\n  callPromisifyAPI: (apiName: string, payload: any): Promise<any> => {\n    console.log(apiName, payload)\n    switch (apiName) {\n      case 'cosmos.getAccounts':\n        return Promise.resolve(['cosmos16gdxm24ht2mxtpz9cma6tr6a6d47x63hlq4pxt'])\n      case 'cosmos.getProvider':\n        return Promise.resolve('https://stargate.cosmos.network')\n      case 'private.getHeaders':\n        return Promise.resolve(`{\"Authorization\":\"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkZXZpY2VUb2tlbiI6IkVBQjZBRTJELThFNEYtNEFDMS1CODM4LTA5MkQwMzE2NjlGQSIsImp0aSI6ImltMTR4NUxZck11Q1lxaXdTRzVBeFhaOXlGRDlIdml2VmJKdDVMRiJ9.rkJ2jziqRKwHvUKX2xkrkA2CDppGegElgVuZ2syHf5Y\",\"X-IDENTIFIER\":\"im14x5LYrMuCYqiwSG5AxXZ9yFD9HvivVbJt5LF\",\"X-CLIENT-VERSION\":\"ios:2.3.1.515:14\",\"X-DEVICE-TOKEN\":\"EAB6AE2D-8E4F-4AC1-B838-092D031669FA\",\"X-LOCALE\":\"en-US\",\"X-CURRENCY\":\"USD\",\"X-DEVICE-LOCALE\":\"en\",\"X-APP-ID\":\"im.token.app\",\"X-API-KEY\":\"3bdc0a49ba634a8e8f3333f8e66e0b84\",\"Content-Type\":\"application/json\"}`)\n      default:\n        return Promise.resolve()\n    }\n  }\n}\n\nconst imToken = window['imToken']\n/**\n * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ rn api requests ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n */\n\nexport function getAccounts() {\n  return imToken.callPromisifyAPI('cosmos.getAccounts')\n}\n\nexport function getProvider() {\n  return imToken.callPromisifyAPI('cosmos.getProvider')\n}\n\nexport function getHeaders() {\n  return imToken.callPromisifyAPI('private.getHeaders')\n    .then(headers => JSON.parse(headers))\n    .then(headers => {\n      delete headers['X-LOCALE']\n      return {\n        // 'Access-Control-Allow-Origin': 'http://localhost:3000',\n        // 'Access-Control-Allow-Credentials': 'true',\n        // ...headers,\n      }\n    })\n}\n\nexport function sendTransaction(payload) {\n  return imToken.callPromisifyAPI('cosmos.sendTransaction', payload)\n}","import { toBN } from './utils'\n\nexport const validAmount = (amount: number | string, balance: number | string, retainFee = 0) => {\n\n  const num = Number(amount)\n\n  if (isNaN(num)) {\n    return [false, '金额不合法']\n  }\n\n  if (num <= 0) {\n    return [false, '请输入大于 0 的金额']\n  }\n\n  const bnAmounnt = toBN(num)\n\n  if (bnAmounnt.plus(retainFee).gt(balance)) {\n    if (bnAmounnt.lt(balance)) {\n      return [false, '矿工费不够']\n    }\n    return [false, '超出可用数量']\n  }\n\n  return [true, null]\n}","export default {\n  \"operator_address\": \"cosmosvaloper1zkupr83hrzkn3up5elktzcq3tuft8nxsmwdqgp\",\n}","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { selectAccountInfo } from '../../lib/redux/selectors'\nimport './index.scss'\nimport Modal from 'react-modal'\nimport { atom, uatom, thousandCommas, isExist, createTxPayload, createDelegateMsg } from 'lib/utils'\nimport { sendTransaction } from 'lib/sdk'\nimport { validAmount } from 'lib/validator'\nimport bannerConfig from '../../config/banner'\nimport tokenConfig from '../../config/token'\nimport feeConfig from '../../config/fee'\n// import * as sdk from '../../lib/sdk'\n\ninterface Props {\n  visible: boolean\n  account: any\n  onRequestClose: Function\n  onDelegateSuccess: Function\n}\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '0',\n    right: '0',\n    bottom: '-8px',\n    borderRadius: '8px',\n  },\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  }\n};\n\nclass CMP extends Component<Props> {\n\n  state = {\n    amount: '',\n  }\n\n  componentDidMount() {\n  }\n\n  afterOpenModal() { }\n\n  onSubmit = () => {\n    const { account } = this.props\n    const { balance, address } = account\n    const { amount } = this.state\n    const [valid, msg] = validAmount(amount, atom(balance), feeConfig.retainFee)\n    if (!valid) {\n      return alert(msg)\n    }\n\n    // send delegate apiCall\n    const txPayload = createTxPayload(\n      address,\n      [createDelegateMsg(address, bannerConfig.operator_address, uatom(amount), tokenConfig.denom)],\n      'delegate from imToken',\n    )\n\n    sendTransaction(txPayload).then(txHash => {\n      alert('发送成功: ' + txHash)\n      this.props.onRequestClose()\n      this.props.onDelegateSuccess()\n      console.log(txHash)\n    }).catch(e => {\n      alert('发送失败: ' + e.message)\n    })\n  }\n\n  onChange = (event) => {\n    this.setState({ amount: event.target.value })\n  }\n\n  render() {\n    const { visible, onRequestClose, account } = this.props\n    const { balance } = account\n    const { amount } = this.state\n    const atomBalance = isExist(balance) ? thousandCommas(atom(balance)) : 0\n    const disabled = !amount\n    return (\n      <Modal\n        isOpen={visible}\n        closeTimeoutMS={300}\n        onAfterOpen={this.afterOpenModal}\n        onRequestClose={onRequestClose}\n        style={customStyles}\n        contentLabel=\"Delegate Modal\"\n      >\n        <div className=\"modal-inner\">\n          <div className=\"form-header\">\n            <span>可用余额</span>\n            <i>{atomBalance} ATOM</i>\n          </div>\n          <input\n            type=\"number\"\n            placeholder=\"输入金额\"\n            value={amount}\n            onChange={this.onChange}\n            max={atomBalance}\n            min={0.000001}\n          />\n          <button disabled={disabled} className=\"form-button\" onClick={this.onSubmit}>委托</button>\n        </div>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    account: selectAccountInfo(state),\n  }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CMP)\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { selectAccountInfo } from '../../lib/redux/selectors'\nimport './index.scss'\nimport Modal from 'react-modal'\nimport { atom, uatom, thousandCommas, isExist, createTxPayload, createUnDelegateMsg } from 'lib/utils'\nimport { sendTransaction } from 'lib/sdk'\nimport { validAmount } from 'lib/validator'\nimport tokenConfig from '../../config/token'\n// import feeConfig from '../../config/fee'\n// import * as sdk from '../../lib/sdk'\n\ninterface Props {\n  visible: boolean\n  account: any\n  selectedDelegation: any\n  onRequestClose: Function\n  onDelegateSuccess: Function\n}\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '0',\n    right: '0',\n    bottom: '-8px',\n    borderRadius: '8px',\n  },\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  }\n};\n\nclass CMP extends Component<Props> {\n\n  state = {\n    amount: '',\n  }\n\n  componentDidMount() {\n  }\n\n  afterOpenModal() { }\n\n  onSubmit = () => {\n    const { account, selectedDelegation } = this.props\n    const delegateBalance = selectedDelegation.shares\n    const { address } = account\n    const { amount } = this.state\n    const [valid, msg] = validAmount(amount, atom(delegateBalance))\n    if (!valid) {\n      return alert(msg)\n    }\n\n    // send delegate apiCall\n    const txPayload = createTxPayload(\n      address,\n      [createUnDelegateMsg(\n        address,\n        selectedDelegation.validator_address,\n        uatom(amount),\n        tokenConfig.denom)\n      ],\n      'undelegate from imToken',\n    )\n\n    sendTransaction(txPayload).then(txHash => {\n      alert('发送成功: ' + txHash)\n      this.props.onRequestClose()\n      this.props.onDelegateSuccess()\n      console.log(txHash)\n    }).catch(e => {\n      alert('发送失败: ' + e.message)\n    })\n  }\n\n  onChange = (event) => {\n    this.setState({ amount: event.target.value })\n  }\n\n  render() {\n    const { visible, onRequestClose, selectedDelegation } = this.props\n\n    if (!selectedDelegation) return null\n\n    const delegateBalance = selectedDelegation.shares\n    const { amount } = this.state\n    const atomBalance = isExist(delegateBalance) ? thousandCommas(atom(delegateBalance)) : 0\n    const disabled = !amount\n    return (\n      <Modal\n        isOpen={visible}\n        closeTimeoutMS={300}\n        onAfterOpen={this.afterOpenModal}\n        onRequestClose={onRequestClose}\n        style={customStyles}\n        contentLabel=\"Delegate Modal\"\n      >\n        <div className=\"modal-inner\">\n          <div className=\"form-header\">\n            <span>已抵押</span>\n            <i>{atomBalance} ATOM</i>\n          </div>\n          <input\n            type=\"number\"\n            placeholder=\"输入金额\"\n            value={amount}\n            onChange={this.onChange}\n            max={atomBalance}\n            min={0.000001}\n          />\n          <button disabled={disabled} className=\"form-button\" onClick={this.onSubmit}>取消委托</button>\n        </div>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    account: selectAccountInfo(state),\n  }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CMP)\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { selectAccountInfo } from '../../lib/redux/selectors'\nimport './index.scss'\nimport { toBN, atom, thousandCommas, ellipsis, isExist } from 'lib/utils'\n\ninterface Props {\n  account: any\n}\n\nclass CMP extends Component<Props> {\n\n  componentDidMount() { }\n\n  render() {\n    const { account } = this.props\n    const { address, balance, rewardBalance, refundingBalance, delegateBalance } = account\n    const atomPrice = 30\n\n    return (\n      <div className=\"account-card\">\n        <div className=\"account-top\">\n          <div className=\"account-top-address\">\n            <strong>Cosmos Wallet</strong>\n            <span>{ellipsis(address || '获取账号中...', 24)}</span>\n          </div>\n          <div className=\"account-top-amount\">\n            <strong>{isExist(balance) ? thousandCommas(atom(balance)) : '~'}</strong>\n            <span>¥ {isExist(balance) ? thousandCommas(toBN(atom(balance)).times(atomPrice).toString()) : '~'}</span>\n          </div>\n        </div>\n        <div className=\"account-bottom\">\n          <div>\n            <div>\n              <span>可用余额</span>\n              <i>{isExist(balance) ? thousandCommas(atom(balance)) : '~'}</i>\n            </div>\n            <div>\n              <span>收益</span>\n              <i>{isExist(rewardBalance) ? thousandCommas(atom(rewardBalance)) : '~'}</i>\n            </div>\n          </div>\n          <div className=\"split-line\"></div>\n          <div>\n            <div>\n              <span>委托</span>\n              <i>{isExist(delegateBalance) ? thousandCommas(atom(delegateBalance)) : '~'}</i>\n            </div>\n            <div>\n              <span>赎回中</span>\n              <i>{isExist(refundingBalance) ? thousandCommas(atom(refundingBalance)) : '~'}</i>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    account: selectAccountInfo(state),\n  }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CMP)\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { selectDelegations, selectValidators } from '../../lib/redux/selectors'\nimport './index.scss'\nimport { atom, thousandCommas } from 'lib/utils'\n\ninterface Props {\n  delegations: any[]\n  validators: any[]\n  onItemPress: Function\n}\n\n\nclass CMP extends Component<Props> {\n\n  componentDidMount() { }\n\n  onPress = (delegation) => {\n    this.props.onItemPress(delegation)\n  }\n\n  renderItem(d, v, index) {\n    if (!v) return null\n    return <div className=\"dl-card\" key={index} onClick={() => this.onPress(d)}>\n      <strong>{v.description.moniker}</strong>\n      <div>\n        <span>已委托</span>\n        <i>{thousandCommas(atom(d.shares))}</i>\n      </div>\n    </div>\n  }\n\n  render() {\n    const { delegations, validators } = this.props\n\n    return (\n      <div className=\"delegations\">\n        {!!delegations && delegations.map((d, index) => {\n          const v = validators.find(el => el.operator_address === d.validator_address)\n          return this.renderItem(d, v, index)\n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    validators: selectValidators(state),\n    delegations: selectDelegations(state),\n  }\n}\n\nconst mapDispatchToProps = {}\nexport default connect(mapStateToProps, mapDispatchToProps)(CMP)\n","import Axios from \"axios\"\nimport { getHeaders, getProvider } from './sdk'\n\n/**\n * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ node requests ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n */\n\nlet _headers = null\nlet _provider = null\n\nexport async function initRequestDependency() {\n  return {\n    headers: _headers || await getHeaders(),\n    provider: _provider || await getProvider()\n  }\n}\n\nfunction get(url, params = {}) {\n  return initRequestDependency().then(({ headers, provider }) => {\n    const _url = `${provider}/${url}`\n    return Axios({ method: 'get', url: _url, params, headers }).then(res => {\n      if (res.data) {\n        return res.data\n      } else {\n        throw new Error(`null response ${url} ${JSON.stringify(params)}`)\n      }\n    }).catch(error => {\n      console.warn(error)\n    })\n  })\n}\n\nexport function getValidators() {\n  return get(`staking/validators`)\n}\n\n// Normalize account response\n// https://github.com/cosmos/cosmos-sdk/issues/3885\nexport function getAccount(address) {\n  const emptyAccount = {\n    coins: [],\n    sequence: `0`,\n    account_number: `0`,\n  }\n  const url = `auth/accounts/${address}`\n  return get(url, {}).then(res => {\n    if (!res) throw new Error('no response')\n    let account = res.value || emptyAccount\n    if (res.type === `auth/DelayedVestingAccount`) {\n      if (!account.BaseVestingAccount) {\n        return emptyAccount\n      }\n      account = Object.assign({},\n        account.BaseVestingAccount.BaseAccount,\n        account.BaseVestingAccount,\n      )\n      delete account.BaseAccount\n      delete account.BaseVestingAccount\n    }\n    return account\n  }).catch(err => {\n    // if account not found, return null instead of throwing\n    if (err.message.includes(`account bytes are empty`) ||\n      err.message.includes(`failed to prove merkle proof`)) {\n      return emptyAccount\n    }\n    // throw err\n    console.warn(err)\n  })\n}\n\nexport const getDelegations = (address) => {\n  const url = `staking/delegators/${address}/delegations`\n  return get(url, {}).then(delegations => delegations || [])\n}\n\nexport const getRewards = (delegatorAddr) => {\n  const url = `distribution/delegators/${delegatorAddr}/rewards`\n  return get(url, {}).then(rewards => rewards || [])\n}\n\nexport const getUnbondingDelegations = (address) => {\n  const url = `staking/delegators/${address}/unbonding_delegations`\n  return get(url, {}).then(unbondingDelegations => unbondingDelegations || [])\n}\n\nexport const genDelegationTx = (delegatorAddr) => {\n  const url = `staking/delegators/${delegatorAddr}/delegations`\n  return get(url, {})\n}\n\n/**\n * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ server rpc requests ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n */\n\nfunction createRpcRequestData(method, params) {\n  return {\n    jsonrpc: '2.0',\n    id: 1,\n    method,\n    params: params || [],\n  }\n}\n\nfunction serverRequest(url, method, params) {\n  return initRequestDependency().then(({ headers }) => {\n    return Axios({\n      method: 'get',\n      url,\n      data: createRpcRequestData(method, params),\n      timeout: 5,\n      headers: headers,\n      withCredentials: true\n    }).then(res => {\n      if (res.data) {\n        return res.data\n      } else {\n        throw new Error(`null response ${url} ${method} ${JSON.stringify(params)}`)\n      }\n    }).catch(error => {\n      console.warn(error)\n    })\n  })\n}\n\nexport function getTxListByAddress(delegator: string, validator: string) {\n  const url = `https://api.dev.tokenlon.im/v1/cosmos`\n  const params = [{\n    address: delegator,\n    tags: {\n      action: ['delegate', 'undelegate'],\n      delegator,\n      validator,\n    }\n  }]\n  return serverRequest(url, 'wallet.getMsgListByAddress', [params]).then(data => data || [])\n}\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { selectValidators } from '../../lib/redux/selectors'\nimport './index.scss'\nimport { updateValidators, updateAccount, updateDelegations } from 'lib/redux/actions'\nimport DelegateModal from '../../components/delegateModal'\nimport UnDelegateModal from '../../components/undelegateModal'\nimport AccountCard from '../../components/accountCard'\nimport DelegationList from '../../components/delegationList'\nimport * as api from 'lib/api'\nimport * as sdk from 'lib/sdk'\nimport * as utils from 'lib/utils'\n\ninterface Props {\n  validators: any[]\n  updateValidators: (value: any) => any\n  updateDelegations: (value: any) => any\n  updateAccount: (value: any) => any\n}\n\nclass Page extends Component<Props, any> {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      delegateModalVisible: false,\n      undelegateModalVisible: false,\n      selectedDelegation: null\n    }\n  }\n\n\n\n  componentWillMount() {\n    this.updateAsyncData()\n  }\n\n  componentDidMount() { }\n\n  updateAsyncData = () => {\n    const { updateAccount, updateDelegations, updateValidators } = this.props\n\n    sdk.getAccounts().then(accounts => {\n      const address = accounts[0]\n\n      updateAccount({ address })\n\n      api.getRewards(address).then(utils.getRewardBalance).then(b => {\n        updateAccount({ rewardBalance: b })\n      })\n\n      api.getUnbondingDelegations(address).then(utils.getUnbondingBalance).then(b => {\n        updateAccount({ refundingBalance: b })\n      })\n\n      api.getAccount(address).then(accountInfo => {\n        const balance = utils.getBalanceFromAccount(accountInfo)\n        updateAccount({ ...accountInfo, balance })\n      })\n\n      api.getDelegations(address).then(delegations => {\n        const delegateBalance = utils.getDeletationBalance(delegations)\n        updateDelegations(delegations)\n        updateAccount({ delegateBalance })\n      })\n    })\n\n    api.getValidators().then(updateValidators)\n  }\n\n  renderDelegateBanner() {\n    return <div className=\"banner\">\n      <div onClick={this.handleDelegate}>\n        <img src=\"/images/banner.png\" alt=\"staking\" />\n      </div>\n    </div>\n  }\n\n  handleDelegate = () => {\n    this.setState({\n      delegateModalVisible: true,\n    })\n  }\n\n  handleUnDelegate = (delegation) => {\n    this.setState({\n      undelegateModalVisible: true,\n      selectedDelegation: delegation,\n    })\n  }\n\n  handleModalClose = () => {\n    this.setState({\n      delegateModalVisible: false,\n      undelegateModalVisible: false,\n    })\n  }\n\n  render() {\n    const { delegateModalVisible, undelegateModalVisible, selectedDelegation } = this.state\n    return (\n      <div className=\"home\" id=\"home\">\n        <AccountCard />\n        <DelegationList onItemPress={this.handleUnDelegate} />\n        {this.renderDelegateBanner()}\n        <DelegateModal\n          visible={delegateModalVisible}\n          onRequestClose={this.handleModalClose}\n          onDelegateSuccess={this.updateAsyncData}\n        />\n        <UnDelegateModal\n          visible={undelegateModalVisible}\n          selectedDelegation={selectedDelegation}\n          onRequestClose={this.handleModalClose}\n          onDelegateSuccess={this.updateAsyncData}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    validators: selectValidators(state),\n  }\n}\n\nconst mapDispatchToProps = {\n  updateAccount,\n  updateDelegations,\n  updateValidators\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page)\n","import * as types from './constant'\n\nexport const updateAccount = (account) => {\n  return {\n    type: types.UPDATE_ACCOUNT,\n    payload: {\n      account,\n    }\n  }\n}\n\nexport const updateValidators = (validators) => {\n  return {\n    type: types.UPDATE_VALIDATORS,\n    payload: {\n      validators,\n    }\n  }\n}\n\nexport const updateDelegations = (delegations) => {\n  return {\n    type: types.UPDATE_DELEGATIONS,\n    payload: {\n      delegations,\n    }\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore from './lib/redux/configureStore'\n\nimport App from './pages/home'\nimport './index.scss'\nimport launch from './lib/launch'\n\nlaunch()\n\nconst store = configureStore(undefined)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}